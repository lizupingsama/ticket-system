#define _CRT_SECURE_NO_WARNINGS
#pragma warning(disable:6031)
#pragma warning(disable:6385)
#pragma warning(disable:6054)
#pragma warning(disable:28182)
#pragma warning(disable:6011)
#pragma warning(disable:6308)
#pragma warning(disable:28183)
#pragma warning(disable:6387)
#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#include<string.h>
#include<标头.h>
extern FILE* fp1;
extern FILE* fp2;
extern FILE* fp3;
extern FILE* fp4;
extern int NumOfManager;
extern int NumOfPassenger;
void ManagerLog()//员工登录注册界面
{
	system("cls");
	printf("     欢迎使用后台管理\n");
	printf("**************************\n");
	printf("***    1.登录已有账户  ***\n");
	printf("***    2.注册新账户    ***\n");
	printf("***    3.返回上一级    ***\n");
	printf("**************************\n");
	int choose = _getch();
	switch (choose)
	{
	case 49:login(); break;
	case 50:logon(); break;
	case 51:main();
	}
}
void BackStage()//后台管理界面
{
	system("cls");
	printf(" 请选择您需要的服务\n");
	printf("************************\n");
	printf("***   1.站点操作     ***\n");
	printf("***   2.票务操作     ***\n");
	printf("***   3.返回上一级   ***\n");
	printf("***   按esc退出程序  ***\n");
	printf("************************\n");
	int choose = _getch();
	switch (choose)
	{
	case 49:; break;
	case 50:; break;
	case 51:ManagerLog();  break;
	case 27:exit(0);
	}
}
void logon()//管理员账户注册
{
	if ( (fp3 = fopen("NumOfManager.txt", "r")) == NULL)
	{
		fp3=fopen("NumOfManager.txt", "w");
		fclose(fp3);
	}
	fp3 = fopen("NumOfManager.txt", "rb");
	fseek(fp3, 0, SEEK_END);//将文件指针移到文件末尾
	int len = ftell(fp3);//检查文件长度
	fseek(fp3, 0, SEEK_SET);//将文件指针移到文件开头
	if (len == 0)//第一个员工创建账号
	{
		char key[20];//用于存储再次输入的密码
		system("cls");
		struct manager* manager = (struct manager*)malloc(sizeof(struct manager));
		printf("请创建一个账号\n");
		scanf("%s", &manager[0].id);
		printf("请输入您的密码\n");
		scanf("%s", &manager[0].password);
		printf("请确认您的密码\n");
		scanf("%s", &key);
		if (strcmp(manager[0].password, key) != 0)//检验两次输入密码是否相同
		{
			int flag = 1;
			while (flag)
			{
				system("cls");
				printf("您输入的两次密码不同，请重新输入密码\n");
				scanf("%s", &manager[0].password);
				printf("请确认您的密码");
				scanf("%s", key);
				if (strcmp(manager[0].password, key) == 0)
					flag = 0;
			}
		}
		NumOfManager++;
		fp3 = fopen("NumOfManager.txt", "w");//创建NumOfManager.txt
		fprintf(fp3, "%d", NumOfManager);//将管理人员人数写入文件中
		fclose(fp3);
		fp1 = fopen("Manager.txt", "wb");
		fwrite(manager, sizeof(struct manager), NumOfManager, fp1);//将管理人员结构体写入文件
		fclose(fp1);
		free(manager);
		system("cls");
		printf("创建账户成功\n按任意键返回登录界面");
		_getch();
		ManagerLog();
	}
	else//后续员工创建账号
	{
		system("cls");
		fp3 = fopen("NumOfManager.txt", "r");
		fscanf(fp3, "%d", &NumOfManager);//从文件读取管理人员人数
		fclose(fp3);

		struct manager* manager = (struct manager*)malloc(sizeof(struct manager) * NumOfManager);
		fp1 = fopen("Manager.txt", "rb");
		fread(manager, sizeof(struct manager), NumOfManager, fp1);//从文件中读取管理人员结构体
		fclose(fp1);

		manager = (struct manager*)realloc(manager, sizeof(struct manager) * (NumOfManager+1));
		//管理人员结构体扩容一个单位

		char key[20];//用于存储再次输入的密码
		printf("请创建一个账号\n");
		scanf("%s", &manager[NumOfManager].id);
		for (int i = 0; i < NumOfManager; i++)
		{
			if (strcmp(manager[NumOfManager].id, manager[i].id) == 0)
			{
				int flag = 1;
				while (flag)
				{
					system("cls");
					printf("已有账号，请重新输入");
					scanf("%s", &manager[NumOfManager].id);
					for ( int n = 0; n < NumOfManager; n++)
					{
						if (strcmp(manager[NumOfManager].id, manager[n].id) == 0)
							break;
						if (n == NumOfManager-1)
						    flag = 0;
					}
				}
				break;
			}
		}
		printf("请输入您的密码\n");
		scanf("%s", &manager[NumOfManager].password);
		printf("请确认您的密码\n");
		scanf("%s", &key);
		if (strcmp(manager[NumOfManager].password, key) != 0)//检验两次输入密码是否相同
		{
			int flag = 1;
			while (flag)
			{
				system("cls");
				printf("您输入的两次密码不同，请重新输入密码\n");
				scanf("%s", &manager[NumOfManager].password);
				printf("请确认您的密码");
				scanf("%s", key);
				if (strcmp(manager[NumOfManager].password, key) == 0)
					flag = 0;
			}
		}
		printf("创建账户成功\n按任意键返回登录界面");
		NumOfManager++;
		fp3 = fopen("NumOfManager.txt", "w");
		fprintf(fp3, "%d", NumOfManager);//将管理人员人数写入文件中
		fclose(fp3);
		fp1 = fopen("Manager.txt", "wb");
		fwrite(manager, sizeof(struct manager), NumOfManager, fp1);//将管理人员人数写入文件中
		fclose(fp1);
		free(manager);
		_getch();
		system("cls");
		ManagerLog();
	}
}
void login()//账户登录
{
	char id[20];
	char password[20];
	system("cls");
	printf("请输入账号\n");
	scanf("%s", &id);
	printf("请输入密码\n");
	scanf("%s", &password);

	fp3 = fopen("NumOfManager.txt", "r");
	fscanf(fp3, "%d", &NumOfManager);//从文件读取管理人员人数
	fclose(fp3);

	struct manager* manager = (struct manager*)malloc(sizeof(struct manager) * NumOfManager);
	fp1 = fopen("Manager.txt", "rb");
	fread(manager, sizeof(struct manager), NumOfManager, fp1);//从文件中读取管理人员结构体
	fclose(fp1);
	int flag = 1;
	while (flag)
	{
		for (int i = 0; i < NumOfManager; i++)
		{
			if (strcmp(id, manager[i].id) == 0)
			{
				for (int m = 0; m < NumOfManager; m++)
				{
					if (strcmp(password, manager[m].password) == 0)
					{
						flag = 0;
						break;
					}
				}
				break;
			}
		}
		if (flag == 1)
		{
			system("cls");
			printf("您输入的账号或密码有误\n");
			printf("按任意键重新输入，按ESC返回");
			int esc = _getch();
			if (esc == 27)
				ManagerLog();
			system("cls");
			printf("请输入账号\n");
			scanf("%s", &id);
			printf("请输入密码\n");
			scanf("%s", &password);
		}
	}
	BackStage();
}
